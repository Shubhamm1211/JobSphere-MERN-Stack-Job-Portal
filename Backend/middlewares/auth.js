// middleware for authorization


import jwt from "jsonwebtoken";
import { catchAsyncError } from "./catchAsyncError.js";
import ErrorHandler from "./error.js";
import { User } from "../models/userSchema.js";

export const isAuthoried= catchAsyncError(async(req,res,next)=>{
    const {token}=req.cookies;
    if(!token){  // Token is generated when user login 
        return next(new ErrorHandler("User not authorized",400)); //{msg,statusCode}
    }
    //if user has token -> decode the token 
    //now compare user token with our json web token secret key 
    //i.e our user token was generated by the same secret key or not
    const decoded=jwt.verify(token,process.env.JWT_SECRET);  // it will verify that the token is generated via the same secret key;
    req.user=await User.findById(decoded.id); //user saved in decoded , find the user by there id 
    next(); // now autherization done , do other stuffs of login , register etc 
})

